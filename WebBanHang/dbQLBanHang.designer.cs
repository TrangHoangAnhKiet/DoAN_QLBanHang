#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBanHang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_BanHangDienTu")]
	public partial class dbQLBanHangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaoCao(BaoCao instance);
    partial void UpdateBaoCao(BaoCao instance);
    partial void DeleteBaoCao(BaoCao instance);
    partial void InsertXemKenh(XemKenh instance);
    partial void UpdateXemKenh(XemKenh instance);
    partial void DeleteXemKenh(XemKenh instance);
    partial void InsertDatHangSanPham(DatHangSanPham instance);
    partial void UpdateDatHangSanPham(DatHangSanPham instance);
    partial void DeleteDatHangSanPham(DatHangSanPham instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertHoaDonThanhToan(HoaDonThanhToan instance);
    partial void UpdateHoaDonThanhToan(HoaDonThanhToan instance);
    partial void DeleteHoaDonThanhToan(HoaDonThanhToan instance);
    partial void InsertKenhBanHang(KenhBanHang instance);
    partial void UpdateKenhBanHang(KenhBanHang instance);
    partial void DeleteKenhBanHang(KenhBanHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKhoHang(KhoHang instance);
    partial void UpdateKhoHang(KhoHang instance);
    partial void DeleteKhoHang(KhoHang instance);
    partial void InsertMuaSanPham(MuaSanPham instance);
    partial void UpdateMuaSanPham(MuaSanPham instance);
    partial void DeleteMuaSanPham(MuaSanPham instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertQuanLySanPham(QuanLySanPham instance);
    partial void UpdateQuanLySanPham(QuanLySanPham instance);
    partial void DeleteQuanLySanPham(QuanLySanPham instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public dbQLBanHangDataContext() : 
				base(global::WebBanHang.Properties.Settings.Default.QL_BanHangDienTuConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLBanHangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaoCao> BaoCaos
		{
			get
			{
				return this.GetTable<BaoCao>();
			}
		}
		
		public System.Data.Linq.Table<XemKenh> XemKenhs
		{
			get
			{
				return this.GetTable<XemKenh>();
			}
		}
		
		public System.Data.Linq.Table<DatHangSanPham> DatHangSanPhams
		{
			get
			{
				return this.GetTable<DatHangSanPham>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonThanhToan> HoaDonThanhToans
		{
			get
			{
				return this.GetTable<HoaDonThanhToan>();
			}
		}
		
		public System.Data.Linq.Table<KenhBanHang> KenhBanHangs
		{
			get
			{
				return this.GetTable<KenhBanHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KhoHang> KhoHangs
		{
			get
			{
				return this.GetTable<KhoHang>();
			}
		}
		
		public System.Data.Linq.Table<MuaSanPham> MuaSanPhams
		{
			get
			{
				return this.GetTable<MuaSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<QuanLySanPham> QuanLySanPhams
		{
			get
			{
				return this.GetTable<QuanLySanPham>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoCao")]
	public partial class BaoCao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBC;
		
		private string _LoaiBC;
		
		private string _NoidungBC;
		
		private System.Nullable<System.DateTime> _NgayLapBC;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBCChanging(string value);
    partial void OnMaBCChanged();
    partial void OnLoaiBCChanging(string value);
    partial void OnLoaiBCChanged();
    partial void OnNoidungBCChanging(string value);
    partial void OnNoidungBCChanged();
    partial void OnNgayLapBCChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapBCChanged();
    #endregion
		
		public BaoCao()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBC", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBC
		{
			get
			{
				return this._MaBC;
			}
			set
			{
				if ((this._MaBC != value))
				{
					this.OnMaBCChanging(value);
					this.SendPropertyChanging();
					this._MaBC = value;
					this.SendPropertyChanged("MaBC");
					this.OnMaBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiBC", DbType="NVarChar(100)")]
		public string LoaiBC
		{
			get
			{
				return this._LoaiBC;
			}
			set
			{
				if ((this._LoaiBC != value))
				{
					this.OnLoaiBCChanging(value);
					this.SendPropertyChanging();
					this._LoaiBC = value;
					this.SendPropertyChanged("LoaiBC");
					this.OnLoaiBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoidungBC", DbType="NVarChar(250)")]
		public string NoidungBC
		{
			get
			{
				return this._NoidungBC;
			}
			set
			{
				if ((this._NoidungBC != value))
				{
					this.OnNoidungBCChanging(value);
					this.SendPropertyChanging();
					this._NoidungBC = value;
					this.SendPropertyChanged("NoidungBC");
					this.OnNoidungBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLapBC", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLapBC
		{
			get
			{
				return this._NgayLapBC;
			}
			set
			{
				if ((this._NgayLapBC != value))
				{
					this.OnNgayLapBCChanging(value);
					this.SendPropertyChanging();
					this._NgayLapBC = value;
					this.SendPropertyChanged("NgayLapBC");
					this.OnNgayLapBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaoCao_NhanVien", Storage="_NhanViens", ThisKey="MaBC", OtherKey="MaBC")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.BaoCao = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.BaoCao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XemKenh")]
	public partial class XemKenh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _MaSP;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public XemKenh()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_XemKenh", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.XemKenhs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.XemKenhs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_XemKenh", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.XemKenhs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.XemKenhs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatHangSanPham")]
	public partial class DatHangSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _MaDH;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    #endregion
		
		public DatHangSanPham()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_DatHangSanPham", Storage="_DonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.DatHangSanPhams.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.DatHangSanPhams.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(string);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatHangSanPham", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatHangSanPhams.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatHangSanPhams.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDH;
		
		private string _TenDonHang;
		
		private System.Nullable<System.DateTime> _NgayDatHang;
		
		private System.Nullable<System.DateTime> _NgayXuatHang;
		
		private string _TrangThaiDH;
		
		private System.Nullable<decimal> _TongGiaTriDH;
		
		private string _MaKH;
		
		private string _MaHoaDon;
		
		private EntitySet<DatHangSanPham> _DatHangSanPhams;
		
		private EntitySet<KenhBanHang> _KenhBanHangs;
		
		private EntityRef<HoaDonThanhToan> _HoaDonThanhToan;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnTenDonHangChanging(string value);
    partial void OnTenDonHangChanged();
    partial void OnNgayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatHangChanged();
    partial void OnNgayXuatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayXuatHangChanged();
    partial void OnTrangThaiDHChanging(string value);
    partial void OnTrangThaiDHChanged();
    partial void OnTongGiaTriDHChanging(System.Nullable<decimal> value);
    partial void OnTongGiaTriDHChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    #endregion
		
		public DonHang()
		{
			this._DatHangSanPhams = new EntitySet<DatHangSanPham>(new Action<DatHangSanPham>(this.attach_DatHangSanPhams), new Action<DatHangSanPham>(this.detach_DatHangSanPhams));
			this._KenhBanHangs = new EntitySet<KenhBanHang>(new Action<KenhBanHang>(this.attach_KenhBanHangs), new Action<KenhBanHang>(this.detach_KenhBanHangs));
			this._HoaDonThanhToan = default(EntityRef<HoaDonThanhToan>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDonHang", DbType="VarChar(50)")]
		public string TenDonHang
		{
			get
			{
				return this._TenDonHang;
			}
			set
			{
				if ((this._TenDonHang != value))
				{
					this.OnTenDonHangChanging(value);
					this.SendPropertyChanging();
					this._TenDonHang = value;
					this.SendPropertyChanged("TenDonHang");
					this.OnTenDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDatHang
		{
			get
			{
				return this._NgayDatHang;
			}
			set
			{
				if ((this._NgayDatHang != value))
				{
					this.OnNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayDatHang = value;
					this.SendPropertyChanged("NgayDatHang");
					this.OnNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuatHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayXuatHang
		{
			get
			{
				return this._NgayXuatHang;
			}
			set
			{
				if ((this._NgayXuatHang != value))
				{
					this.OnNgayXuatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayXuatHang = value;
					this.SendPropertyChanged("NgayXuatHang");
					this.OnNgayXuatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDH", DbType="NVarChar(255)")]
		public string TrangThaiDH
		{
			get
			{
				return this._TrangThaiDH;
			}
			set
			{
				if ((this._TrangThaiDH != value))
				{
					this.OnTrangThaiDHChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDH = value;
					this.SendPropertyChanged("TrangThaiDH");
					this.OnTrangThaiDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongGiaTriDH", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TongGiaTriDH
		{
			get
			{
				return this._TongGiaTriDH;
			}
			set
			{
				if ((this._TongGiaTriDH != value))
				{
					this.OnTongGiaTriDHChanging(value);
					this.SendPropertyChanging();
					this._TongGiaTriDH = value;
					this.SendPropertyChanged("TongGiaTriDH");
					this.OnTongGiaTriDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NVarChar(50)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="VarChar(50)")]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDonThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_DatHangSanPham", Storage="_DatHangSanPhams", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<DatHangSanPham> DatHangSanPhams
		{
			get
			{
				return this._DatHangSanPhams;
			}
			set
			{
				this._DatHangSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_KenhBanHang", Storage="_KenhBanHangs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<KenhBanHang> KenhBanHangs
		{
			get
			{
				return this._KenhBanHangs;
			}
			set
			{
				this._KenhBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonThanhToan_DonHang", Storage="_HoaDonThanhToan", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDonThanhToan HoaDonThanhToan
		{
			get
			{
				return this._HoaDonThanhToan.Entity;
			}
			set
			{
				HoaDonThanhToan previousValue = this._HoaDonThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonThanhToan.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._HoaDonThanhToan.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(string);
					}
					this.SendPropertyChanged("HoaDonThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatHangSanPhams(DatHangSanPham entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_DatHangSanPhams(DatHangSanPham entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
		
		private void attach_KenhBanHangs(KenhBanHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_KenhBanHangs(KenhBanHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonThanhToan")]
	public partial class HoaDonThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDon;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private System.Nullable<decimal> _SoTienThanhToan;
		
		private string _PhuongThucThanhToan;
		
		private System.Nullable<int> _MaDH;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    partial void OnSoTienThanhToanChanging(System.Nullable<decimal> value);
    partial void OnSoTienThanhToanChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnMaDHChanging(System.Nullable<int> value);
    partial void OnMaDHChanged();
    #endregion
		
		public HoaDonThanhToan()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienThanhToan", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> SoTienThanhToan
		{
			get
			{
				return this._SoTienThanhToan;
			}
			set
			{
				if ((this._SoTienThanhToan != value))
				{
					this.OnSoTienThanhToanChanging(value);
					this.SendPropertyChanging();
					this._SoTienThanhToan = value;
					this.SendPropertyChanged("SoTienThanhToan");
					this.OnSoTienThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(255)")]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int")]
		public System.Nullable<int> MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonThanhToan_DonHang", Storage="_DonHangs", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonThanhToan_NhanVien", Storage="_NhanViens", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonThanhToan = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonThanhToan = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonThanhToan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonThanhToan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KenhBanHang")]
	public partial class KenhBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKenh;
		
		private string _TenKenh;
		
		private string _MoTaKenh;
		
		private string _MaDH;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKenhChanging(string value);
    partial void OnMaKenhChanged();
    partial void OnTenKenhChanging(string value);
    partial void OnTenKenhChanged();
    partial void OnMoTaKenhChanging(string value);
    partial void OnMoTaKenhChanged();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    #endregion
		
		public KenhBanHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKenh", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKenh
		{
			get
			{
				return this._MaKenh;
			}
			set
			{
				if ((this._MaKenh != value))
				{
					this.OnMaKenhChanging(value);
					this.SendPropertyChanging();
					this._MaKenh = value;
					this.SendPropertyChanged("MaKenh");
					this.OnMaKenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKenh", DbType="NVarChar(255)")]
		public string TenKenh
		{
			get
			{
				return this._TenKenh;
			}
			set
			{
				if ((this._TenKenh != value))
				{
					this.OnTenKenhChanging(value);
					this.SendPropertyChanging();
					this._TenKenh = value;
					this.SendPropertyChanged("TenKenh");
					this.OnTenKenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaKenh", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoTaKenh
		{
			get
			{
				return this._MoTaKenh;
			}
			set
			{
				if ((this._MoTaKenh != value))
				{
					this.OnMoTaKenhChanging(value);
					this.SendPropertyChanging();
					this._MoTaKenh = value;
					this.SendPropertyChanged("MoTaKenh");
					this.OnMoTaKenhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(50)")]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_KenhBanHang", Storage="_DonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.KenhBanHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.KenhBanHangs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(string);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _Email;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _TaiKhoan;
		
		private EntitySet<XemKenh> _XemKenhs;
		
		private EntitySet<DatHangSanPham> _DatHangSanPhams;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntitySet<MuaSanPham> _MuaSanPhams;
		
		private EntityRef<TaiKhoan> _TaiKhoan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    #endregion
		
		public KhachHang()
		{
			this._XemKenhs = new EntitySet<XemKenh>(new Action<XemKenh>(this.attach_XemKenhs), new Action<XemKenh>(this.detach_XemKenhs));
			this._DatHangSanPhams = new EntitySet<DatHangSanPham>(new Action<DatHangSanPham>(this.attach_DatHangSanPhams), new Action<DatHangSanPham>(this.detach_DatHangSanPhams));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._MuaSanPhams = new EntitySet<MuaSanPham>(new Action<MuaSanPham>(this.attach_MuaSanPhams), new Action<MuaSanPham>(this.detach_MuaSanPhams));
			this._TaiKhoan1 = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="VarChar(255)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(100)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					if (this._TaiKhoan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_XemKenh", Storage="_XemKenhs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<XemKenh> XemKenhs
		{
			get
			{
				return this._XemKenhs;
			}
			set
			{
				this._XemKenhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatHangSanPham", Storage="_DatHangSanPhams", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DatHangSanPham> DatHangSanPhams
		{
			get
			{
				return this._DatHangSanPhams;
			}
			set
			{
				this._DatHangSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_MuaSanPham", Storage="_MuaSanPhams", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<MuaSanPham> MuaSanPhams
		{
			get
			{
				return this._MuaSanPhams;
			}
			set
			{
				this._MuaSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang", Storage="_TaiKhoan1", ThisKey="TaiKhoan", OtherKey="TenDangNhap", IsForeignKey=true)]
		public TaiKhoan TaiKhoan1
		{
			get
			{
				return this._TaiKhoan1.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan1.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan1.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._TaiKhoan1.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._TaiKhoan = value.TenDangNhap;
					}
					else
					{
						this._TaiKhoan = default(string);
					}
					this.SendPropertyChanged("TaiKhoan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XemKenhs(XemKenh entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_XemKenhs(XemKenh entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DatHangSanPhams(DatHangSanPham entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DatHangSanPhams(DatHangSanPham entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_MuaSanPhams(MuaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_MuaSanPhams(MuaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoHang")]
	public partial class KhoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoHang;
		
		private string _DiaChiKho;
		
		private string _MaSP;
		
		private string _MaNV;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoHangChanging(string value);
    partial void OnMaKhoHangChanged();
    partial void OnDiaChiKhoChanging(string value);
    partial void OnDiaChiKhoChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    #endregion
		
		public KhoHang()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoHang", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoHang
		{
			get
			{
				return this._MaKhoHang;
			}
			set
			{
				if ((this._MaKhoHang != value))
				{
					this.OnMaKhoHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhoHang = value;
					this.SendPropertyChanged("MaKhoHang");
					this.OnMaKhoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKho", DbType="NVarChar(255)")]
		public string DiaChiKho
		{
			get
			{
				return this._DiaChiKho;
			}
			set
			{
				if ((this._DiaChiKho != value))
				{
					this.OnDiaChiKhoChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKho = value;
					this.SendPropertyChanged("DiaChiKho");
					this.OnDiaChiKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="NVarChar(50)")]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_KhoHang", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.KhoHangs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.KhoHangs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhoHang", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.KhoHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.KhoHangs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MuaSanPham")]
	public partial class MuaSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _MaSP;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public MuaSanPham()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_MuaSanPham", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.MuaSanPhams.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.MuaSanPhams.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_MuaSanPham", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.MuaSanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.MuaSanPhams.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private System.Nullable<System.DateTime> _NamSinh;
		
		private string _GioiTinh;
		
		private string _LoaiCongViec;
		
		private System.Nullable<double> _HeSoLuong;
		
		private string _MaDH;
		
		private string _MaBC;
		
		private string _MaHoaDon;
		
		private string _TaiKhoan;
		
		private EntitySet<KhoHang> _KhoHangs;
		
		private EntitySet<QuanLySanPham> _QuanLySanPhams;
		
		private EntityRef<BaoCao> _BaoCao;
		
		private EntityRef<HoaDonThanhToan> _HoaDonThanhToan;
		
		private EntityRef<TaiKhoan> _TaiKhoan1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnNamSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNamSinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnLoaiCongViecChanging(string value);
    partial void OnLoaiCongViecChanged();
    partial void OnHeSoLuongChanging(System.Nullable<double> value);
    partial void OnHeSoLuongChanged();
    partial void OnMaDHChanging(string value);
    partial void OnMaDHChanged();
    partial void OnMaBCChanging(string value);
    partial void OnMaBCChanged();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    #endregion
		
		public NhanVien()
		{
			this._KhoHangs = new EntitySet<KhoHang>(new Action<KhoHang>(this.attach_KhoHangs), new Action<KhoHang>(this.detach_KhoHangs));
			this._QuanLySanPhams = new EntitySet<QuanLySanPham>(new Action<QuanLySanPham>(this.attach_QuanLySanPhams), new Action<QuanLySanPham>(this.detach_QuanLySanPhams));
			this._BaoCao = default(EntityRef<BaoCao>);
			this._HoaDonThanhToan = default(EntityRef<HoaDonThanhToan>);
			this._TaiKhoan1 = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(255)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiCongViec", DbType="NChar(100)")]
		public string LoaiCongViec
		{
			get
			{
				return this._LoaiCongViec;
			}
			set
			{
				if ((this._LoaiCongViec != value))
				{
					this.OnLoaiCongViecChanging(value);
					this.SendPropertyChanging();
					this._LoaiCongViec = value;
					this.SendPropertyChanged("LoaiCongViec");
					this.OnLoaiCongViecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoLuong", DbType="Float")]
		public System.Nullable<double> HeSoLuong
		{
			get
			{
				return this._HeSoLuong;
			}
			set
			{
				if ((this._HeSoLuong != value))
				{
					this.OnHeSoLuongChanging(value);
					this.SendPropertyChanging();
					this._HeSoLuong = value;
					this.SendPropertyChanged("HeSoLuong");
					this.OnHeSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="VarChar(50)")]
		public string MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBC", DbType="VarChar(50)")]
		public string MaBC
		{
			get
			{
				return this._MaBC;
			}
			set
			{
				if ((this._MaBC != value))
				{
					if (this._BaoCao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBCChanging(value);
					this.SendPropertyChanging();
					this._MaBC = value;
					this.SendPropertyChanged("MaBC");
					this.OnMaBCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="VarChar(50)")]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDonThanhToan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(100)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					if (this._TaiKhoan1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_KhoHang", Storage="_KhoHangs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<KhoHang> KhoHangs
		{
			get
			{
				return this._KhoHangs;
			}
			set
			{
				this._KhoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_QuanLySanPham", Storage="_QuanLySanPhams", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<QuanLySanPham> QuanLySanPhams
		{
			get
			{
				return this._QuanLySanPhams;
			}
			set
			{
				this._QuanLySanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaoCao_NhanVien", Storage="_BaoCao", ThisKey="MaBC", OtherKey="MaBC", IsForeignKey=true)]
		public BaoCao BaoCao
		{
			get
			{
				return this._BaoCao.Entity;
			}
			set
			{
				BaoCao previousValue = this._BaoCao.Entity;
				if (((previousValue != value) 
							|| (this._BaoCao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BaoCao.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._BaoCao.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaBC = value.MaBC;
					}
					else
					{
						this._MaBC = default(string);
					}
					this.SendPropertyChanged("BaoCao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonThanhToan_NhanVien", Storage="_HoaDonThanhToan", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDonThanhToan HoaDonThanhToan
		{
			get
			{
				return this._HoaDonThanhToan.Entity;
			}
			set
			{
				HoaDonThanhToan previousValue = this._HoaDonThanhToan.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonThanhToan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonThanhToan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._HoaDonThanhToan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(string);
					}
					this.SendPropertyChanged("HoaDonThanhToan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NhanVien", Storage="_TaiKhoan1", ThisKey="TaiKhoan", OtherKey="TenDangNhap", IsForeignKey=true)]
		public TaiKhoan TaiKhoan1
		{
			get
			{
				return this._TaiKhoan1.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan1.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan1.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._TaiKhoan1.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._TaiKhoan = value.TenDangNhap;
					}
					else
					{
						this._TaiKhoan = default(string);
					}
					this.SendPropertyChanged("TaiKhoan1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_QuanLySanPhams(QuanLySanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_QuanLySanPhams(QuanLySanPham entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuanLySanPham")]
	public partial class QuanLySanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaSP;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public QuanLySanPham()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_QuanLySanPham", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.QuanLySanPhams.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.QuanLySanPhams.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_QuanLySanPham", Storage="_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.QuanLySanPhams.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.QuanLySanPhams.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _TenSP;
		
		private decimal _Gia;
		
		private string _MoTa;
		
		private string _ThongSoKT;
		
		private System.Nullable<int> _TonKho;
		
		private EntitySet<XemKenh> _XemKenhs;
		
		private EntitySet<KhoHang> _KhoHangs;
		
		private EntitySet<MuaSanPham> _MuaSanPhams;
		
		private EntitySet<QuanLySanPham> _QuanLySanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnThongSoKTChanging(string value);
    partial void OnThongSoKTChanged();
    partial void OnTonKhoChanging(System.Nullable<int> value);
    partial void OnTonKhoChanged();
    #endregion
		
		public SanPham()
		{
			this._XemKenhs = new EntitySet<XemKenh>(new Action<XemKenh>(this.attach_XemKenhs), new Action<XemKenh>(this.detach_XemKenhs));
			this._KhoHangs = new EntitySet<KhoHang>(new Action<KhoHang>(this.attach_KhoHangs), new Action<KhoHang>(this.detach_KhoHangs));
			this._MuaSanPhams = new EntitySet<MuaSanPham>(new Action<MuaSanPham>(this.attach_MuaSanPhams), new Action<MuaSanPham>(this.detach_MuaSanPhams));
			this._QuanLySanPhams = new EntitySet<QuanLySanPham>(new Action<QuanLySanPham>(this.attach_QuanLySanPhams), new Action<QuanLySanPham>(this.detach_QuanLySanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongSoKT", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string ThongSoKT
		{
			get
			{
				return this._ThongSoKT;
			}
			set
			{
				if ((this._ThongSoKT != value))
				{
					this.OnThongSoKTChanging(value);
					this.SendPropertyChanging();
					this._ThongSoKT = value;
					this.SendPropertyChanged("ThongSoKT");
					this.OnThongSoKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TonKho", DbType="Int")]
		public System.Nullable<int> TonKho
		{
			get
			{
				return this._TonKho;
			}
			set
			{
				if ((this._TonKho != value))
				{
					this.OnTonKhoChanging(value);
					this.SendPropertyChanging();
					this._TonKho = value;
					this.SendPropertyChanged("TonKho");
					this.OnTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_XemKenh", Storage="_XemKenhs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<XemKenh> XemKenhs
		{
			get
			{
				return this._XemKenhs;
			}
			set
			{
				this._XemKenhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_KhoHang", Storage="_KhoHangs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<KhoHang> KhoHangs
		{
			get
			{
				return this._KhoHangs;
			}
			set
			{
				this._KhoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_MuaSanPham", Storage="_MuaSanPhams", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<MuaSanPham> MuaSanPhams
		{
			get
			{
				return this._MuaSanPhams;
			}
			set
			{
				this._MuaSanPhams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_QuanLySanPham", Storage="_QuanLySanPhams", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<QuanLySanPham> QuanLySanPhams
		{
			get
			{
				return this._QuanLySanPhams;
			}
			set
			{
				this._QuanLySanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XemKenhs(XemKenh entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_XemKenhs(XemKenh entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_MuaSanPhams(MuaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_MuaSanPhams(MuaSanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_QuanLySanPhams(QuanLySanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_QuanLySanPhams(QuanLySanPham entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _LoaiTK;
		
		private EntitySet<KhachHang> _KhachHangs;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnLoaiTKChanging(string value);
    partial void OnLoaiTKChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTK", DbType="NVarChar(50)")]
		public string LoaiTK
		{
			get
			{
				return this._LoaiTK;
			}
			set
			{
				if ((this._LoaiTK != value))
				{
					this.OnLoaiTKChanging(value);
					this.SendPropertyChanging();
					this._LoaiTK = value;
					this.SendPropertyChanged("LoaiTK");
					this.OnLoaiTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang", Storage="_KhachHangs", ThisKey="TenDangNhap", OtherKey="TaiKhoan")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NhanVien", Storage="_NhanViens", ThisKey="TenDangNhap", OtherKey="TaiKhoan")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan1 = null;
		}
	}
}
#pragma warning restore 1591
